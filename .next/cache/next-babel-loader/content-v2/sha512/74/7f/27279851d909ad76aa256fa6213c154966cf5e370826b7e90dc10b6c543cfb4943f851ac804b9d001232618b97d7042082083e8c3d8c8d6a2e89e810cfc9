{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\NextJS\\\\first-next-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: \"m1\",\n    image: \"https://images.unsplash.com/photo-1623090914209-ef27f7063db5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80\",\n    alt: \"First Meetup\",\n    title: \"A first Meetup\",\n    address: \"Some Address 123, Pune\",\n    description: \"Meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(el => ({\n      params: {\n        meetupId: _id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: 'https://images.unsplash.com/photo-1623090914209-ef27f7063db5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n        title: 'A first Meetup',\n        address: \"Some Address 123, Pune\",\n        description: 'Meetup description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["F:/Prasad/DEV/NextJS/first-next-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","getStaticPaths","client","connect","db","collection","meetups","find","_id","toArray","fallback","paths","map","el","params","meetupId","toString","getStaticProps","context","console","log","meetupData","id","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACI,QAAC,YAAD;AACI,IAAA,EAAE,EAAC,IADP;AAEI,IAAA,KAAK,EAAC,+JAFV;AAE0K,IAAA,GAAG,EAAC,cAF9K;AAGI,IAAA,KAAK,EAAC,gBAHV;AAII,IAAA,OAAO,EAAC,wBAJZ;AAKI,IAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACjB,sGADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AAEA,QAAMC,OAAO,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAtB;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,EAAE,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEP,GAAG,CAACQ,QAAJ;AAAZ;AAAV,KAAL,CAAd;AAFJ,GAAP;AAKH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACHf,IAAAA,KAAK,EAAE;AACHqB,MAAAA,UAAU,EAAE;AACRC,QAAAA,EAAE,EAAEP,QADI;AAERQ,QAAAA,KAAK,EAAE,+JAFC;AAGRC,QAAAA,KAAK,EAAE,gBAHC;AAIRC,QAAAA,OAAO,EAAE,wBAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAYH;AAED,eAAe3B,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nfunction MeetupDetails(props) {\r\n    return (\r\n        <MeetupDetail\r\n            id='m1'\r\n            image='https://images.unsplash.com/photo-1623090914209-ef27f7063db5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80' alt='First Meetup'\r\n            title='A first Meetup'\r\n            address=\"Some Address 123, Pune\"\r\n            description='Meetup description' />\r\n\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n    const collection = db.collection('meetups');\r\n\r\n    const meetups = await collection.find({}, { _id: 1 }).toArray();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(el => ({ params: { meetupId: _id.toString() } }))\r\n        \r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    console.log(meetupId);\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetupId,\r\n                image: 'https://images.unsplash.com/photo-1623090914209-ef27f7063db5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n                title: 'A first Meetup',\r\n                address: \"Some Address 123, Pune\",\r\n                description: 'Meetup description'\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}