{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\NextJS\\\\first-next-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  // console.log(props.meetupData);\n  // debugger\n  const {\n    id,\n    title,\n    address,\n    description,\n    image\n  } = props.selectedData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: id,\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(el => ({\n      params: {\n        meetupId: el._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetupSelected = await collection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      selectedData: {\n        id: meetupSelected._id.toString(),\n        title: meetupSelected.title,\n        address: meetupSelected.address,\n        description: meetupSelected.description,\n        image: meetupSelected.image\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["F:/Prasad/DEV/NextJS/first-next-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","MeetupDetails","props","id","title","address","description","image","selectedData","getStaticPaths","client","connect","db","collection","meetups","find","_id","toArray","close","fallback","paths","map","el","params","meetupId","toString","getStaticProps","context","console","log","meetupSelected","findOne"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B;AACA;AACA,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA6CL,KAAK,CAACM,YAAzD;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQJ;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAEE;AAFb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,YAAD;AACI,MAAA,EAAE,EAAEH,EADR;AAEI,MAAA,KAAK,EAAEI,KAFX;AAGI,MAAA,KAAK,EAAEH,KAHX;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAiBH;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,sGADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AAEA,QAAMC,OAAO,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAAgCC,OAAhC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,EAAE,KAChB;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,EAAE,CAACN,GAAH,CAAOS,QAAP;AAAZ;AAAV,KADgB,CAAd;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,QAAMd,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACjB,sGADiB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AAEA,QAAMiB,cAAc,GAAG,MAAMjB,UAAU,CAACkB,OAAX,CAAmB;AAAEf,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AAAf,GAAnB,CAA7B;AACAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHM,MAAAA,YAAY,EAAE;AACVL,QAAAA,EAAE,EAAE2B,cAAc,CAACd,GAAf,CAAmBS,QAAnB,EADM;AAEVrB,QAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAFZ;AAGVC,QAAAA,OAAO,EAAEyB,cAAc,CAACzB,OAHd;AAIVC,QAAAA,WAAW,EAAEwB,cAAc,CAACxB,WAJlB;AAKVC,QAAAA,KAAK,EAAEuB,cAAc,CAACvB;AALZ;AADX;AADJ,GAAP;AAYH;AAED,eAAeN,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport Head from 'next/head';\r\n\r\nfunction MeetupDetails(props) {\r\n    // console.log(props.meetupData);\r\n    // debugger\r\n    const { id, title, address, description, image } = props.selectedData;\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{title}</title>\r\n                <meta\r\n                    name='description'\r\n                    content={description}\r\n                />\r\n            </Head>\r\n            <MeetupDetail\r\n                id={id}\r\n                image={image}\r\n                title={title}\r\n                address={address}\r\n                description={description} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n    const collection = db.collection('meetups');\r\n\r\n    const meetups = await collection.find({}, { _id: 1 }).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(el =>\r\n            ({ params: { meetupId: el._id.toString() } }))\r\n\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    console.log(meetupId);\r\n\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n    const collection = db.collection('meetups');\r\n\r\n    const meetupSelected = await collection.findOne({ _id: ObjectId(meetupId) });\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            selectedData: {\r\n                id: meetupSelected._id.toString(),\r\n                title: meetupSelected.title,\r\n                address: meetupSelected.address,\r\n                description: meetupSelected.description,\r\n                image: meetupSelected.image\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}