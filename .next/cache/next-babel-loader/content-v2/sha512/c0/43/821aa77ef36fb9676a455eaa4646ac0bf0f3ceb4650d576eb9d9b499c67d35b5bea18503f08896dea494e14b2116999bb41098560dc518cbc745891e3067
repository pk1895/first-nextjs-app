{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\Prasad\\\\DEV\\\\NextJS\\\\first-next-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  console.log(props.meetupData);\n  debugger;\n  var id = props.id,\n      title = props.title,\n      address = props.address,\n      description = props.description,\n      image = props.image;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: id,\n    image: image,\n    title: title,\n    address: address,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["F:/Prasad/DEV/NextJS/first-next-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log","meetupData","id","title","address","description","image"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA;AAF0B,MAGlBC,EAHkB,GAGyBJ,KAHzB,CAGlBI,EAHkB;AAAA,MAGdC,KAHc,GAGyBL,KAHzB,CAGdK,KAHc;AAAA,MAGPC,OAHO,GAGyBN,KAHzB,CAGPM,OAHO;AAAA,MAGEC,WAHF,GAGyBP,KAHzB,CAGEO,WAHF;AAAA,MAGeC,KAHf,GAGyBR,KAHzB,CAGeQ,KAHf;AAI1B,sBACI,QAAC,YAAD;AACI,IAAA,EAAE,EAAEJ,EADR;AAEI,IAAA,KAAK,EAAEI,KAFX;AAGI,IAAA,KAAK,EAAEH,KAHX;AAII,IAAA,OAAO,EAAEC,OAJb;AAKI,IAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAbQR,a;;AAwDT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nfunction MeetupDetails(props) {\r\n    console.log(props.meetupData);\r\n    debugger\r\n    const { id, title, address, description, image } = props;\r\n    return (\r\n        <MeetupDetail\r\n            id={id}\r\n            image={image}\r\n            title={title}\r\n            address={address}\r\n            description={description} />\r\n\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n    const collection = db.collection('meetups');\r\n\r\n    const meetups = await collection.find({}, { _id: 1 }).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(el =>\r\n            ({ params: { meetupId: el._id.toString() } }))\r\n\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    console.log(meetupId);\r\n\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://prasad:qWDZu87DMoRSXDsy@cluster0.fhxsb.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n\r\n    const db = client.db();\r\n    const collection = db.collection('meetups');\r\n\r\n    const meetupSelected = await collection.findOne({ _id: meetupId });\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: meetupSelected\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}